//NMec: 107476

use rest
show collections


//db.restaurants.count() deprecated
//db.restaurants.countDocuments()


//1.
    //db.restaurants.find()
    
//2.
    //db.restaurants.find({},{restaurant_id:1,nome:1,localidade:1,gastronomia:1})
    
//3.
    //db.restaurants.find({},{_id:0,restaurant_id:1,nome:1,localidade:1,"address.zipcode":1})
    
//4.
    //db.restaurants.find({localidade:"Bronx"}).count()
    
//5.
    //db.restaurants.find({localidade:"Bronx"}).sort({nome:1}).limit(15)
    
//6.
    //db.restaurants.find({"grades.score":{ $gt: 85 }})
    
//7.
    //db.restaurants.find({grades: {$elemMatch: {score: {$gte: 80,$lt: 100}}}})

//8.
    //db.restaurants.find({"address.coord.0":{ $lt: -95.7 }})
    
//9.
    //db.restaurants.find({"address.coord.0": { $lt: -65 },"gastronomia": { $ne: "American" },"grades": { $elemMatch: { "score": { $gt: 70 } } }})
    
//10
    //db.restaurants.find({"nome": /^Wil/ }, { "restaurant_id": 1, "nome": 1, "localidade": 1, "gastronomia": 1 })
    
//11
    //db.restaurants.find({"localidade": "Bronx", "$or": [{"gastronomia": "American"},{"gastronomia": "Chinese"}]},{ "nome": 1, "localidade": 1, "gastronomia": 1 })
    
//12
    //db.restaurants.find({"localidade": {$in: ["Staten Island","Queens","Brooklyn"]}},{ "nome": 1, "localidade": 1, "gastronomia": 1 })
 
//13 
    //db.restaurants.find( {"grades": { $elemMatch: { "score": { $lte: 3 }} }},{ "nome": 1, "localidade": 1, "grades.score": 1, "gastronomia": 1 })
    
//14
    //db.restaurants.find({$and: [{ "grades": { $elemMatch: { "grade": "A" } } },{ "grades": { $elemMatch: { "score": 10 } } },{ "grades": { $elemMatch: { "date": ISODate("2014-08-11T00:00:00Z") } } }]},{ "nome": 1, "grades": 1 })    

//15
    //db.restaurants.find({"grades.1.grade": "A", "grades.1.date": ISODate("2014-08-11T00:00:00Z")}, {"restaurant_id": 1, "nome": 1, "grades": 1})
    
//16
    //db.restaurants.find({"address.coord.1": { $gt: 42,$lt: 52 }},{"restaurant_id": 1, "nome": 1, "address": 1})
    
//17
    //db.restaurants.find({},{"nome": 1,"localidade":1,"gastronomia":1}).sort({"gastronomia": 1,"localidade": -1});
 
//18
    //db.restaurants.find({"localidade": "Brooklyn","gastronomia": { $ne: "American" },"grades.grade": "A"},{"nome": 1,"localidade": 1,"grade": 1,"gastronomia": 1,"_id": 0}).sort({"gastronomia": -1});
    
//19
//    db.restaurants.mapReduce(
//      // Map function - número de avaliações se o campo "grades" existir
//      function () {
//        if (this.grades) {
//          emit("total", this.grades.length);
//        }
//      },
//      // Reduce function - soma os valores 
//      function (key, values) {
//        return Array.sum(values);
//      },
//      {
//        out: "numGrades" // Nome da coleção temporária com o resultado
//      }
//    );
   
//    // resultado
//    db.total_avaliacoes.findOne().value;


//20
    //db.restaurants.find({}, { nome: 1, grades: 1, _id: 0 }).sort({ "this.grades.length": -1 }).limit(3);
    
   
//21
    var dayCount = [0, 0, 0, 0, 0, 0, 0];
    
    db.restaurants.find({ "grades.date": { $exists: true } }, { "grades.date": 1, "_id": 0 })
      .forEach(function(restaurant) {
        restaurant.grades.forEach(function(grade) {
          var day = new Date(grade.date).getDay();
          dayOfWeekCount[dayOfWeek]++;
        });
      });
    
    print("Domingo: " + dayCount[0]);
    print("Segunda-feira: " + dayCount[1]);
    print("Terça-feira: " + dayCount[2]);
    print("Quarta-feira: " + dayCount[3]);
    print("Quinta-feira: " + dayCount[4]);
    print("Sexta-feira: " + dayCount[5]);
    print("Sábado: " + dayCount[6]);
    
//22
    var localidades = {};
    
    db.restaurants.find({})
      .forEach(function(restaurant) {
        var localidade = restaurant.localidade
            if (localidade in localidades){
                localidades[localidade]++;
            }
            else {
                localidades[localidade] = 1;
            }
        });
        
      for (var localidade in localidades) {
          print("Localidade: " + localidade + ", Total de Restaurantes: " + localidades[localidade]);
      }
   
//23
    db.restaurants.find({"gastronomia":"Portuguese" , "address.coord.0": { $lt: -60 }}).forEach(function(restaurante) {
      var Score = 0;
      restaurante.grades.forEach(function(grade) {
        Score += grade.score;
      });
    
      if (Score > 50) {
        print("Nome do Restaurante: " + restaurante.nome);
        print("Somatório de Score: " + Score);
        print("\n");
      }
    })
    
//24
    var gastronomias = [];
    var n_gastronomias = 0;
    db.restaurants.find({"address.rua":"Fifth Avenue"}).forEach(function(restaurante) {
      var gastronomia = restaurante.gastronomia
      if (!gastronomias.includes(gastronomia)) {
          gastronomias.push(gastronomia);
          n_gastronomias++;
        }
    })
    print("Número de gastronomias diferentes na rua Fifth Avenue: " + n_gastronomias);
    
    //ou
    
    db.restaurants.distinct("gastronomia", { "address.rua": "Fifth Avenue" }).length;
    print("\n");
    print("\n");
    

//25

    db.restaurants.find({"grades.date": { $gte: ISODate("2014-01-01")}}).forEach(function(restaurante) {
      var Score = 0;
      var N_grades = 0;
      restaurante.grades.forEach(function(grade) {
        Score += grade.score;
        N_grades += 1;
      });
      var Avg_Score = Score/N_grades;
      if (Avg_Score > 30) {
        print("Nome do Restaurante: " + restaurante.nome);
        print("Avg_Score: " + Avg_Score);
        print("Numero de Grades: " + N_grades)
        print("\n");
      }
    })
    
    

    



    
    
